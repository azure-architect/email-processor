services:
  fastapi:
    build: .
    container_name: ${PROJECT_NAME}-fastapi-${SUFFIX}
    ports:
      - "${FASTAPI_PORT}:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - microservice-network

  postgres:
    image: postgres:15-alpine
    container_name: ${PROJECT_NAME}-postgres-${SUFFIX}
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - microservice-network

  redis:
    image: redis:7-alpine
    container_name: ${PROJECT_NAME}-redis-${SUFFIX}
    ports:
      - "6379:6379"
    networks:
      - microservice-network

  celery:
    build: .
    container_name: ${PROJECT_NAME}-celery-${SUFFIX}
    command: ["celery", "-A", "src.workers.celery_app", "worker", "--loglevel=info"]
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - microservice-network

  celery-beat:
    build: .
    container_name: ${PROJECT_NAME}-celery-beat-${SUFFIX}
    command: ["celery", "-A", "src.workers.celery_app", "beat", "--loglevel=info"]
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - microservice-network

  flower:
    build: .
    container_name: ${PROJECT_NAME}-flower-${SUFFIX}
    command: ["celery", "-A", "src.workers.celery_app", "flower", "--port=5555"]
    ports:
      - "${FLOWER_PORT}:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - microservice-network

networks:
  microservice-network:
    driver: bridge
